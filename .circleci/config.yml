# Golang CircleCI 2.0 configuration file
#
# Settings via the UI:
# - Configured GOOGLE_CLOUD_PROJECT environment variable
# - Configured SERVICE_ACCOUNT_KEY with the key contents
# - Only building PRs
# - Auto-canceling redundant builds
#
# @todo consider adding caching to test process,
# many go commands retrieve dependencies.
#
version: 2
jobs:
  test:
    docker:
      # The workspace for the CI build, based on go 1.12.
      # Alternative: Circle doesn't know we're using Go,
      # instead we build a test.Dockerfile and whatever happens
      # in the build is our CI result.
      - image: circleci/golang:1.12

    environment:
      GO111MODULE: "on"
      TEST_RESULTS: "/tmp/test-results"

    working_directory: /go/src/github.com/grayside/test
    steps:
      - checkout
      - run:
        name: Lint
        command: go fmt .
      - run:
          name: Test
          command: |
            go get github.com/jstemmer/go-junit-report
            trap "go-junit-report <${TEST_RESULTS}/go-test.out > ${TEST_RESULTS}/go-test-report.xml" EXIT
            go test -v . | tee ${TEST_RESULTS}/go-test.out
      # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
      - store_artifacts:
          path: ${TEST_RESULTS}
          destination: raw-test-output
      # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
      - store_test_results:
          path: ${TEST_RESULTS}

  # https://vsupalov.com/build-docker-image-with-circle-ci-2-push-to-google-container-registry/
  build-and-push:
    docker:
      # The workspace for the CI build, based on go 1.12.
      # Alternative: Circle doesn't know we're using Go,
      # instead we build a test.Dockerfile and whatever happens
      # in the build is our CI result.
      - image: google/cloud-sdk

    environment:
      GO111MODULE: "on"

    working_directory: /go/src/github.com/grayside/test
    steps:
      - checkout
      - run:
          name: Prepare GCP Service Account Credentials
          command: |
            echo ${SERVICE_ACCOUNT_KEY} > ${HOME}/sa-key.json
            gcloud auth activate-service-account --key-file ${HOME}/sa-key.json
            gcloud --quiet config set project $GOOGLE_CLOUD_PROJECT
      # Build
      - run:
          name: Build & Push Docker Image
          command: |
            gcloud builds submit \
            --tag gcr.io/$GOOGLE_CLOUD_PROJECT/test:$CIRCLE_SHA1 \
            .
      # Push
      - run:
          name: Add Branch Name as Docker Tag  
          when: on_success
          command: |
            BRANCH_DOCKER_TAG=$(echo $CIRCLE_BRANCH | tr / -) \
            gcloud container images add-tag \
            gcr.io/$GOOGLE_CLOUD_PROJECT/test:$CIRCLE_SHA1 \
            gcr.io/$GOOGLE_CLOUD_PROJECT/test:$BRANCH_DOCKER_TAG     

# https://circleci.com/docs/2.0/workflows/
workflows:
  version: 2
  test-build-and-push:
    jobs:
      - test
      - build-and-push:
          requires:
            - test
      